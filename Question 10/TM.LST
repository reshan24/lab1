MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; ***************************************************************** ;
                      00002 ;        Software License Agreement                                 ;
                      00003 ;                                                                   ;
                      00004 ; The software supplied herewith by Microchip Technology            ;
                      00005 ; Incorporated (the “Company”) for its PICmicro® Microcontroller is ;
                      00006 ; intended and supplied to you, the Company’s customer, for use     ;
                      00007 ; solely and exclusively on Microchip PICmicro Microcontroller      ;
                      00008 ; products. The software is owned by the Company and/or its         ;
                      00009 ; supplier, and is protected under applicable copyright laws. All   ;
                      00010 ; rights are reserved. Any use in violation of the foregoing        ;
                      00011 ; restrictions may subject the user to criminal sanctions under     ;
                      00012 ; applicable laws, as well as to civil liability for the breach of  ;
                      00013 ; the terms and conditions of this license.                         ;
                      00014 ;                                                                   ;
                      00015 ; THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES, ;
                      00016 ; WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED ;
                      00017 ; TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A       ;
                      00018 ; PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT, ;
                      00019 ; IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR        ;
                      00020 ; CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                 ;
                      00021 ;                                                                   ;
                      00022 ;                                                                   ;
                      00023 ; A Simple Task Manager v1.00 by Ross Fosler                        ;
                      00024 ; ***************************************************************** ;
                      00025 
                      00026 
                      00027 ; *******************************************************************
                      00028         #include <define.inc>
                      00001 ; ***************************************************************** ;
                      00002 ;        Software License Agreement                                 ;
                      00003 ;                                                                   ;
                      00004 ; The software supplied herewith by Microchip Technology            ;
                      00005 ; Incorporated (the “Company”) for its PICmicro® Microcontroller is ;
                      00006 ; intended and supplied to you, the Company’s customer, for use     ;
                      00007 ; solely and exclusively on Microchip PICmicro Microcontroller      ;
                      00008 ; products. The software is owned by the Company and/or its         ;
                      00009 ; supplier, and is protected under applicable copyright laws. All   ;
                      00010 ; rights are reserved. Any use in violation of the foregoing        ;
                      00011 ; restrictions may subject the user to criminal sanctions under     ;
                      00012 ; applicable laws, as well as to civil liability for the breach of  ;
                      00013 ; the terms and conditions of this license.                         ;
                      00014 ;                                                                   ;
                      00015 ; THIS SOFTWARE IS PROVIDED IN AN “AS IS” CONDITION. NO WARRANTIES, ;
                      00016 ; WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED ;
                      00017 ; TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A       ;
                      00018 ; PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. THE COMPANY SHALL NOT, ;
                      00019 ; IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL OR        ;
                      00020 ; CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.                 ;
                      00021 ;                                                                   ;
                      00022 ;                                                                   ;
                      00023 ; A Simple Task Manager v1.00 by Ross Fosler                        ;
                      00024 ;                                                                   ;
                      00025 ; This is a definition file used to incorporate tasks and           ;
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00026 ; priorities at the start of the task manager.                      ;
                      00027 ; ***************************************************************** ;
                      00028 
                      00029 
                      00030 ; *******************************************************************
                      00031 ; The values after corispond to the position in the hardware stack
                      00032 ; used by the tasks.  Position 0 is not valid since it is set to
                      00033 ; always return a 0x0000 (reset).
                      00034 
                      00035 #DEFINE TASK1   0x01
                      00036 #DEFINE TASK2   0x08
                      00037 #DEFINE TASK3   0x10
                      00038 #DEFINE TASK4   0x18
                      00039 ; *******************************************************************
                      00040 
                      00041 
                      00042 ; *******************************************************************
                      00043 ; The following defines the time allotted to the preloaded tasks.  
                      00044 ; The value 0x00 corisponds to a null task; values 0x01 through 0x3F
                      00045 ; set the max allowed time for the task to run before it is 
                      00046 ; interrupted.
                      00047 
                      00048 #DEFINE TASK1_TIME      0x3F
                      00049 #DEFINE TASK2_TIME      0x02
                      00050 #DEFINE TASK3_TIME      0x00
                      00051 #DEFINE TASK4_TIME      0x00
                      00052 ; *******************************************************************
                      00053 
                      00054 
                      00055 ; *******************************************************************
                      00056 ; The following defines the names of the preloaded tasks.  Uncomment 
                      00057 ; or comment these as necessary for preloaded tasks.  There must
                      00058 ; be at least one task to pre-load.
                      00059 
                      00060 #DEFINE TASK1_NAME      Task1
                      00061 #DEFINE TASK2_NAME      Task2
                      00062 ;#DEFINE        TASK3_NAME      Task3Name
                      00063 ;#DEFINE        TASK4_NAME      Task4Name
                      00064 ; *******************************************************************
                      00065 
                      00066 
                      00067 ; *******************************************************************
                      00068 ; This value affects the task time.  Valid range from 0x00 to 0x07.
                      00069 
                      00070 #DEFINE TIMER_PRESCALE  0x04
                      00071 ; *******************************************************************
                      00072 
                      00073 
                      00074 ; *******************************************************************
                      00075 ; Set the name of the interrupt handler.  Comment out if none.
                      00076 
                      00077 ;#DEFINE INT_HAND_NAME  InterruptHandler
                      00078 ; *******************************************************************
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00079 
                      00080 
                      00081 ; *******************************************************************
                      00082 ; Set the name of the setup routine.  Comment out if none.
                      00083 
                      00084 #DEFINE SETUP_NAME      Setup
                      00085 ; *******************************************************************
                      00086 
                      00087 
                      00088 ; *******************************************************************
                      00089 ; Setup the SFRs to be managed by the task manager.  Comment out the 
                      00090 ; registers that are not shared across more than one task.  It is best 
                      00091 ; to comment out as many as possible to reduce memory usage and 
                      00092 ; task manager execution length.
                      00093 
                      00094 #DEFINE SAVE_FSR0H
                      00095 #DEFINE SAVE_FSR0L
                      00096 #DEFINE SAVE_FSR1H
                      00097 #DEFINE SAVE_FSR1L
                      00098 #DEFINE SAVE_FSR2H
                      00099 #DEFINE SAVE_FSR2L
                      00100 #DEFINE SAVE_PRODH
                      00101 #DEFINE SAVE_PRODL
                      00102 #DEFINE SAVE_BSR
                      00103 #DEFINE SAVE_TBLPTRU
                      00104 #DEFINE SAVE_TBLPTRH
                      00105 #DEFINE SAVE_TBLPTRL
                      00106 #DEFINE SAVE_TABLAT
                      00107 ; *******************************************************************
                      00108 
                      00109 
                      00110 ; *******************************************************************
                      00111 ; Setup the specific processor file to use.
                      00112 
                      00113 #DEFINE PROC_INCLUDE    P18C452.INC
                      00114 ; *******************************************************************
                      00115 
                      00116 
                      00117 ; *******************************************************************
                      00118 ; Uncomment if the device has the lfsr bug.
                      00119 
                      00120 #DEFINE LFSR_BUG
                      00121 ; *******************************************************************
                      00122         
                      00029         #include PROC_INCLUDE           ; Processor include file
                      00001         LIST
                      00002 ; P18C452.INC  Standard Header File, Version 0.10   Microchip Technology, Inc.
                      00774         LIST
                      00030         #include <macroins.inc>
                      00001 ; *****************************************************************************
                      00002 ; Some common macros for Golden Gate by Ross Fosler     
                      00003 ; v1.00         01/05/01
                      00004 ;
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00005 ;       brset   MYFILE, MYBIT, MYBANK, WHERE    ; Bit tests
                      00006 ;       brclr   MYFILE, MYBIT, MYBANK, WHERE
                      00007 ;
                      00008 ;       cffblt  MYFILE1, MYFILE2, MYBANK, WHERE ; Compare file w/ file
                      00009 ;       cffbgt  MYFILE1, MYFILE2, MYBANK, WHERE
                      00010 ;       cffbeq  MYFILE1, MYFILE2, MYBANK, WHERE
                      00011 ;       cffbne  MYFILE1, MYFILE2, MYBANK, WHERE
                      00012 ;
                      00013 ;       cflblt  MYFILE1, MYLIT1, MYBANK, WHERE  ; Compare file w/ literal
                      00014 ;       cflbgt  MYFILE1, MYLIT1, MYBANK, WHERE
                      00015 ;       cflbeq  MYFILE1, MYLIT1, MYBANK, WHERE
                      00016 ;       cflbne  MYFILE1, MYLIT1, MYBANK, WHERE
                      00017 ; 
                      00018 ;       movlf   MYLIT, MYFILE, MYBANK           ; Move literal to file
                      00019 ;       addff   MYFILE1, MYFILE2, MYDIRECTION, MYBANK   ; Add file to file
                      00020 ;       addfl   MYFILE1, MYLIT1, MYDIRECTION, MYBANK    ; Add file to literal
                      00021 ;       andff   MYFILE1, MYFILE2, MYDIRECTION, MYBANK   ; And file to file
                      00022 ;       andfl   MYFILE1, MYLIT1, MYDIRECTION, MYBANK    ; And file to literal
                      00023 ;       iorff   MYFILE1, MYFILE2, MYDIRECTION, MYBANK   ; Ior file to file
                      00024 ;       iorfl   MYFILE1, MYLIT1, MYDIRECTION, MYBANK    ; Ior file to literal
                      00025 ;       xorff   MYFILE1, MYFILE2, MYDIRECTION, MYBANK   ; Xor file to file
                      00026 ;       xorfl   MYFILE1, MYLIT1, MYDIRECTION, MYBANK    ; Xor file to literal
                      00027 ;
                      00028 ; *****************************************************************************
                      00029 
                      00030 
                      00031 ; *****************************************************************************
  00000000            00032 W       equ     0       ; To WREG
  00000001            00033 F       equ     1       ; To FILE
  00000000            00034 A       equ     0       ; Use Access Bank
  00000001            00035 B       equ     1       ; Use BSR
  00000FF4            00036 WREG2   equ     PRODH
  00000FF3            00037 WREG3   equ     PRODL
                      00038 ; *****************************************************************************
                      00039 
                      00040 
                      00041 ; *** Common Branch Instructions **********************************************
                      00042 ; Notes:        W is destroyed except for brset and brclr.
                      00043 ;               All branching is limited to 7 bits in either direction of the 
                      00044 ;               PC, thus these branch instructions cannot reach all memory.
                      00045 
                      00046 
                      00047 ; *****************************************************************
                      00048 ; *** BRanch if bit is SET                                      
                      00049 brset   macro   MYFILE, MYBIT, MYBANK, WHERE
                      00050         btfsc   MYFILE, MYBIT, MYBANK
                      00051         bra     WHERE
                      00052         endm
                      00053 ; *** BRanch if bit is CLeaR            
                      00054 brclr   macro   MYFILE, MYBIT, MYBANK, WHERE
                      00055         btfss   MYFILE, MYBIT, MYBANK
                      00056         bra     WHERE
                      00057         endm
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00058 ; *****************************************************************
                      00059 
                      00060 
                      00061 ; *****************************************************************
                      00062 ; *** Compare File with File and Branch if Less Than    
                      00063 ; *** IF F1 < F2 THEN branch                            
                      00064 cffblt  macro   MYFILE1, MYFILE2, MYBANK, WHERE
                      00065         movf    MYFILE2, W, MYBANK
                      00066         subwf   MYFILE1, W, MYBANK
                      00067         bn      WHERE
                      00068         endm
                      00069 
                      00070 ; *** Compare File with File and Branch if Greater Than         
                      00071 ; *** IF F1 > F2 THEN branch                            
                      00072 cffbgt  macro   MYFILE1, MYFILE2, MYBANK, WHERE
                      00073         movf    MYFILE1, W, MYBANK
                      00074         subwf   MYFILE2, W, MYBANK
                      00075         bn      WHERE
                      00076         endm
                      00077 
                      00078 ; *** Compare File with File and Branch if EQual        
                      00079 ; *** IF F1 = F2 THEN branch                            
                      00080 cffbeq  macro   MYFILE1, MYFILE2, MYBANK, WHERE
                      00081         movf    MYFILE1, W, MYBANK
                      00082         subwf   MYFILE2, W, MYBANK
                      00083         bz      WHERE
                      00084         endm
                      00085 
                      00086 ; *** Compare File with File and Branch if Not Equal    
                      00087 ; *** IF F1 <> F2 THEN branch                           
                      00088 cffbne  macro   MYFILE1, MYFILE2, MYBANK, WHERE
                      00089         movf    MYFILE1, W, MYBANK
                      00090         subwf   MYFILE2, W, MYBANK
                      00091         bnz     WHERE
                      00092         endm
                      00093 ; *****************************************************************
                      00094 
                      00095 
                      00096 ; *****************************************************************
                      00097 ; *** Compare File with Literal and Branch if Less Than 
                      00098 ; *** IF F1 < L1 THEN branch                            
                      00099 cflblt  macro   MYFILE1, MYLIT1, MYBANK, WHERE
                      00100         movlw   MYLIT1
                      00101         subwf   MYFILE1, W, MYBANK
                      00102         bn      WHERE
                      00103         endm
                      00104 
                      00105 ; *** Compare File with Literal and Branch if Greater Than
                      00106 ; *** IF F1 > L1 THEN branch                            
                      00107 cflbgt  macro   MYFILE1, MYLIT1, MYBANK, WHERE
                      00108         movf    MYFILE1, W, MYBANK
                      00109         sublw   MYLIT1
                      00110         bn      WHERE
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00111         endm
                      00112 
                      00113 ; *** Compare File with Literal and Branch if EQual     
                      00114 ; *** IF F1 = L1 THEN branch                            
                      00115 cflbeq  macro   MYFILE1, MYLIT1, MYBANK, WHERE
                      00116         movf    MYFILE1, W, MYBANK
                      00117         sublw   MYLIT1
                      00118         bz      WHERE
                      00119         endm
                      00120 
                      00121 ; *** Compare File with Literal and Branch if Not Equal 
                      00122 ; *** IF F1 <> L1 THEN branch                           
                      00123 cflbne  macro   MYFILE1, MYLIT1, MYBANK, WHERE
                      00124         movf    MYFILE1, W, MYBANK
                      00125         sublw   MYLIT1
                      00126         bnz     WHERE
                      00127         endm
                      00128 ; *****************************************************************
                      00129 
                      00130 ; *****************************************************************************
                      00131 
                      00132 
                      00133 
                      00134 ; *** Other Instructions ******************************************************
                      00135 
                      00136 ; *** MOVe Literal to File ****************************************                             
                      00137 ; Notes:        W is destroyed in this macro.
                      00138 movlf   macro   MYLIT, MYFILE, MYBANK
                      00139         movlw   MYLIT
                      00140         movwf   MYFILE, MYBANK
                      00141         endm
                      00142 ; *****************************************************************
                      00143 
                      00144 
                      00145 ; *** ADD File to File ********************************************
                      00146 ; Notes:        Direction selects either the WREG or FILE1.
                      00147 ;               W is destroyed in this macro.
                      00148 addff   macro   MYFILE1, MYFILE2, MYDIRECTION, MYBANK
                      00149         movf    MYFILE2, W, MYBANK
                      00150         addwf   MYFILE1, MYDIRECTION, MYBANK
                      00151         endm
                      00152 ; *****************************************************************
                      00153 
                      00154 
                      00155 ; *** ADD File to Literal *****************************************
                      00156 ; Notes:        Direction selects either the WREG or FILE1.
                      00157 ;               W is destroyed in this macro.
                      00158 addfl   macro   MYFILE1, MYLIT1, MYDIRECTION, MYBANK
                      00159         movlw   MYLIT1
                      00160         addwf   MYFILE1, MYDIRECTION, MYBANK
                      00161         endm
                      00162 ; *****************************************************************
                      00163 
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00164 
                      00165 ; *** AND File to File ********************************************
                      00166 ; Notes:        Direction selects either the WREG or FILE1.
                      00167 ;               W is destroyed in this macro.
                      00168 andff   macro   MYFILE1, MYFILE2, MYDIRECTION, MYBANK
                      00169         movf    MYFILE2, W, MYBANK
                      00170         andwf   MYFILE1, MYDIRECTION, MYBANK
                      00171         endm
                      00172 ; *****************************************************************
                      00173 
                      00174 
                      00175 ; *** AND File to Literal *****************************************
                      00176 ; Notes:        Direction selects either the WREG or FILE1.
                      00177 ;               W is destroyed in this macro.
                      00178 andfl   macro   MYFILE1, MYLIT1, MYDIRECTION, MYBANK
                      00179         movlw   MYLIT1
                      00180         andwf   MYFILE1, MYDIRECTION, MYBANK
                      00181         endm
                      00182 ; *****************************************************************
                      00183 
                      00184 
                      00185 ; *** Inclusive OR File to File ***********************************
                      00186 ; Notes:        Direction selects either the WREG or FILE1.
                      00187 ;               W is destroyed in this macro.
                      00188 iorff   macro   MYFILE1, MYFILE2, MYDIRECTION, MYBANK
                      00189         movf    MYFILE2, W, MYBANK
                      00190         iorwf   MYFILE1, MYDIRECTION, MYBANK
                      00191         endm
                      00192 ; *****************************************************************
                      00193 
                      00194 
                      00195 ; *** Inclusive OR File to Literal ********************************
                      00196 ; Notes:        Direction selects either the WREG or FILE1.
                      00197 ;               W is destroyed in this macro.
                      00198 iorfl   macro   MYFILE1, MYLIT1, MYDIRECTION, MYBANK
                      00199         movlw   MYLIT1
                      00200         iorwf   MYFILE1, MYDIRECTION, MYBANK
                      00201         endm
                      00202 ; *****************************************************************
                      00203 
                      00204 
                      00205 ; *** XOR File to File ********************************************
                      00206 ; Notes:        Direction selects either the WREG or FILE1.
                      00207 ;               W is destroyed in this macro.
                      00208 xorff   macro   MYFILE1, MYFILE2, MYDIRECTION, MYBANK
                      00209         movf    MYFILE2, W, MYBANK
                      00210         xorwf   MYFILE1, MYDIRECTION, MYBANK
                      00211         endm
                      00212 ; *****************************************************************
                      00213 
                      00214 
                      00215 ; *** XOR File to Literal *****************************************
                      00216 ; Notes:        Direction selects either the WREG or FILE1.
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00217 ;               W is destroyed in this macro.
                      00218 xorfl   macro   MYFILE1, MYLIT1, MYDIRECTION, MYBANK
                      00219         movlw   MYLIT1
                      00220         xorwf   MYFILE1, MYDIRECTION, MYBANK
                      00221         endm
                      00222 ; *****************************************************************
                      00223 
                      00224 
                      00225 
                      00226 ; *****************************************************************************
                      00031 ; *******************************************************************
                      00032 
                      00033 
                      00034 ; *******************************************************************
                      00035 _TM_SCRATCH     UDATA
000000                00036 TEMP    res     1
                      00037 ; *******************************************************************
                      00038 
                      00039 
                      00040 ; *******************************************************************
                      00041  IFDEF  INT_HAND_NAME
                      00042         EXTERN  INT_HAND_NAME
                      00043  ENDIF
                      00044 
                      00045  IFDEF  SAVE_BSR
  0000                00046         EXTERN  BACKUP_BSR
                      00047  ENDIF
                      00048 
                      00049  IFDEF  SAVE_FSR0L
  0000                00050         EXTERN  BACKUP_FSR0L
                      00051  ENDIF
                      00052 
                      00053  IFDEF  SAVE_FSR0H
  0000                00054         EXTERN  BACKUP_FSR0H
                      00055  ENDIF
                      00056 
                      00057  IFDEF  SAVE_FSR1L
  0000                00058         EXTERN  BACKUP_FSR1L
                      00059  ENDIF
                      00060 
                      00061  IFDEF  SAVE_FSR1H
  0000                00062         EXTERN  BACKUP_FSR1H
                      00063  ENDIF
                      00064 
                      00065  IFDEF  SAVE_PRODH
  0000                00066         EXTERN  BACKUP_PRODH
                      00067  ENDIF
                      00068 
                      00069  IFDEF  SAVE_PRODL
  0000                00070         EXTERN  BACKUP_PRODL
                      00071  ENDIF
                      00072 
                      00073  IFDEF  SAVE_FSR2L
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00074         EXTERN  BACKUP_FSR2L
  0000                00075         EXTERN  ALT_FSR2L
                      00076  ENDIF
                      00077 
                      00078  IFDEF  SAVE_FSR2H
  0000                00079         EXTERN  BACKUP_FSR2H
  0000                00080         EXTERN  ALT_FSR2H
                      00081  ENDIF
                      00082 
                      00083  IFDEF  SAVE_TBLPTRU
  0000                00084         EXTERN  BACKUP_TBLPTRU
                      00085  ENDIF
                      00086 
                      00087  IFDEF  SAVE_TBLPTRH
  0000                00088         EXTERN  BACKUP_TBLPTRH
                      00089  ENDIF
                      00090 
                      00091  IFDEF  SAVE_TBLPTRL
  0000                00092         EXTERN  BACKUP_TBLPTRL
                      00093  ENDIF
                      00094 
                      00095  IFDEF  SAVE_TABLAT
  0000                00096         EXTERN  BACKUP_TABLAT
                      00097  ENDIF
                      00098 
                      00099 
  0000                00100         EXTERN  TASK_TABLE, TASK_INFO_TABLE
  0000                00101         EXTERN  BACKUP_WREG, BACKUP_STATUS
                      00102 
  0000                00103         EXTERN  TASK_POINTER, TABLE_POINTER, TASK_COUNTER
  0000                00104         EXTERN  TASK_COMMAND, TASK_BUFFER
                      00105 
  0000                00106         EXTERN  TASK_COMMAND, TASK_BUFFER, ALT_W0
  0000                00107         EXTERN  ALT_STATUS
                      00108 ; *******************************************************************
                      00109 
                      00110 
                      00111 ; *******************************************************************
                      00112  IFDEF  LFSR_BUG                ; Macro to work around lfsr bug
                      00113 ldfsr2  macro   JUNK, MYLIT
                      00114         movff   WREG, TEMP
                      00115         movlw   high MYLIT
                      00116         movwf   FSR2H
                      00117         movlw   low MYLIT
                      00118         movwf   FSR2L
                      00119         movff   TEMP, WREG
                      00120         endm
                      00121  ELSE
                      00122 ldfsr2  macro   _FSR, _REG
                      00123         lfsr    _FSR, _REG
                      00124         endm
                      00125  ENDIF
                      00126 ; *******************************************************************
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00127 
                      00128 
                      00129 
                      00130 ; *******************************************************************
                      00131 TM      CODE    
                      00132 ; *******************************************************************
000000                00133 TaskManager
  0000                00134         GLOBAL  TaskManager
                      00135 
                      00136 ; *** Stop the Timer **************************************
000000 9ED5           00137         bcf     T0CON, TMR0ON, A        ; Stop the timer
                      00138 ; *********************************************************
                      00139 
                      00140 ; *** Save Important Data *********************************
000002 6E00           00141         movwf   ALT_W0, A               ; Copy WREG
000004 CFD8 F???      00142         movff   STATUS, ALT_STATUS      ; Copy STATUS
                      00143 
                      00144 ; *** Test the Interrupt Source ***
                      00145  IFDEF  INT_HAND_NAME
                      00146         btfss   INTCON, TMR0IF, A
                      00147         goto    INT_HAND_NAME           ; Check other interrupt sources          
                      00148  ENDIF
                      00149 ; *********************************             
                      00150 
000008 5000           00151         movf    TABLE_POINTER, W, A
                      00152 
                      00153  IFDEF  SAVE_FSR2L
00000A CFD9 F???      00154         movff   FSR2L, ALT_FSR2L
                      00155  ENDIF  
                      00156 
                      00157  IFDEF  SAVE_FSR2H
00000E CFDA F???      00158         movff   FSR2H, ALT_FSR2H
                      00159  ENDIF  
                      00160 
                      00161         ldfsr2  2, TASK_TABLE           ; Save pointer to TOS
000012 CFE8 F???          M         movff   WREG, TEMP
000016 0E??               M         movlw   high TASK_TABLE
000018 6EDA               M         movwf   FSR2H
00001A 0E??               M         movlw   low TASK_TABLE
00001C 6ED9               M         movwf   FSR2L
00001E C??? FFE8          M         movff   TEMP, WREG
000022 CFFC FFDB      00162         movff   STKPTR, PLUSW2          
                      00163         ldfsr2  2, BACKUP_WREG          ; Save WREG
000026 CFE8 F???          M         movff   WREG, TEMP
00002A 0E??               M         movlw   high BACKUP_WREG
00002C 6EDA               M         movwf   FSR2H
00002E 0E??               M         movlw   low BACKUP_WREG
000030 6ED9               M         movwf   FSR2L
000032 C??? FFE8          M         movff   TEMP, WREG
000036 C??? FFDB      00164         movff   ALT_W0, PLUSW2  
                      00165         ldfsr2  2, BACKUP_STATUS        ; Save STATUS   
00003A CFE8 F???          M         movff   WREG, TEMP
00003E 0E??               M         movlw   high BACKUP_STATUS
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000040 6EDA               M         movwf   FSR2H
000042 0E??               M         movlw   low BACKUP_STATUS
000044 6ED9               M         movwf   FSR2L
000046 C??? FFE8          M         movff   TEMP, WREG
00004A C??? FFDB      00166         movff   ALT_STATUS, PLUSW2      
                      00167 
                      00168  IFDEF  SAVE_BSR
                      00169         ldfsr2  2, BACKUP_BSR           ; Save BSR
00004E CFE8 F???          M         movff   WREG, TEMP
000052 0E??               M         movlw   high BACKUP_BSR
000054 6EDA               M         movwf   FSR2H
000056 0E??               M         movlw   low BACKUP_BSR
000058 6ED9               M         movwf   FSR2L
00005A C??? FFE8          M         movff   TEMP, WREG
00005E CFE0 FFDB      00170         movff   BSR, PLUSW2             
                      00171  ENDIF
                      00172 
                      00173  IFDEF  SAVE_FSR0H
                      00174         ldfsr2  2, BACKUP_FSR0H         ; Save FSR0H
000062 CFE8 F???          M         movff   WREG, TEMP
000066 0E??               M         movlw   high BACKUP_FSR0H
000068 6EDA               M         movwf   FSR2H
00006A 0E??               M         movlw   low BACKUP_FSR0H
00006C 6ED9               M         movwf   FSR2L
00006E C??? FFE8          M         movff   TEMP, WREG
000072 CFEA FFDB      00175         movff   FSR0H, PLUSW2
                      00176  ENDIF
                      00177 
                      00178  IFDEF  SAVE_FSR0L
                      00179         ldfsr2  2, BACKUP_FSR0L         ; Save FSR0L
000076 CFE8 F???          M         movff   WREG, TEMP
00007A 0E??               M         movlw   high BACKUP_FSR0L
00007C 6EDA               M         movwf   FSR2H
00007E 0E??               M         movlw   low BACKUP_FSR0L
000080 6ED9               M         movwf   FSR2L
000082 C??? FFE8          M         movff   TEMP, WREG
000086 CFE9 FFDB      00180         movff   FSR0L, PLUSW2
                      00181  ENDIF
                      00182 
                      00183  IFDEF  SAVE_FSR1H
                      00184         ldfsr2  2, BACKUP_FSR1H         ; Save FSR1H
00008A CFE8 F???          M         movff   WREG, TEMP
00008E 0E??               M         movlw   high BACKUP_FSR1H
000090 6EDA               M         movwf   FSR2H
000092 0E??               M         movlw   low BACKUP_FSR1H
000094 6ED9               M         movwf   FSR2L
000096 C??? FFE8          M         movff   TEMP, WREG
00009A CFE2 FFDB      00185         movff   FSR1H, PLUSW2
                      00186  ENDIF
                      00187 
                      00188  IFDEF  SAVE_FSR1L
                      00189         ldfsr2  2, BACKUP_FSR1L         ; Save FSR1L
00009E CFE8 F???          M         movff   WREG, TEMP
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000A2 0E??               M         movlw   high BACKUP_FSR1L
0000A4 6EDA               M         movwf   FSR2H
0000A6 0E??               M         movlw   low BACKUP_FSR1L
0000A8 6ED9               M         movwf   FSR2L
0000AA C??? FFE8          M         movff   TEMP, WREG
0000AE CFE1 FFDB      00190         movff   FSR1L, PLUSW2
                      00191  ENDIF
                      00192 
                      00193  IFDEF  SAVE_FSR2H
                      00194         ldfsr2  2, BACKUP_FSR2H         ; Save FSR2H
0000B2 CFE8 F???          M         movff   WREG, TEMP
0000B6 0E??               M         movlw   high BACKUP_FSR2H
0000B8 6EDA               M         movwf   FSR2H
0000BA 0E??               M         movlw   low BACKUP_FSR2H
0000BC 6ED9               M         movwf   FSR2L
0000BE C??? FFE8          M         movff   TEMP, WREG
0000C2 C??? FFDB      00195         movff   ALT_FSR2H, PLUSW2
                      00196  ENDIF
                      00197 
                      00198  IFDEF  SAVE_FSR2L
                      00199         ldfsr2  2, BACKUP_FSR2L         ; Save FSR2L
0000C6 CFE8 F???          M         movff   WREG, TEMP
0000CA 0E??               M         movlw   high BACKUP_FSR2L
0000CC 6EDA               M         movwf   FSR2H
0000CE 0E??               M         movlw   low BACKUP_FSR2L
0000D0 6ED9               M         movwf   FSR2L
0000D2 C??? FFE8          M         movff   TEMP, WREG
0000D6 C??? FFDB      00200         movff   ALT_FSR2L, PLUSW2
                      00201  ENDIF
                      00202 
                      00203  IFDEF  SAVE_PRODH
                      00204         ldfsr2  2, BACKUP_PRODH         ; Save PRODH
0000DA CFE8 F???          M         movff   WREG, TEMP
0000DE 0E??               M         movlw   high BACKUP_PRODH
0000E0 6EDA               M         movwf   FSR2H
0000E2 0E??               M         movlw   low BACKUP_PRODH
0000E4 6ED9               M         movwf   FSR2L
0000E6 C??? FFE8          M         movff   TEMP, WREG
0000EA CFF4 FFDB      00205         movff   PRODH, PLUSW2
                      00206  ENDIF
                      00207 
                      00208  IFDEF  SAVE_PRODL
                      00209         ldfsr2  2, BACKUP_PRODL         ; Save PRODL
0000EE CFE8 F???          M         movff   WREG, TEMP
0000F2 0E??               M         movlw   high BACKUP_PRODL
0000F4 6EDA               M         movwf   FSR2H
0000F6 0E??               M         movlw   low BACKUP_PRODL
0000F8 6ED9               M         movwf   FSR2L
0000FA C??? FFE8          M         movff   TEMP, WREG
0000FE CFF3 FFDB      00210         movff   PRODL, PLUSW2
                      00211  ENDIF
                      00212 
                      00213 
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00214  IFDEF  SAVE_TBLPTRU
                      00215         ldfsr2  2, BACKUP_TBLPTRU       ; Save TBLPTRU
000102 CFE8 F???          M         movff   WREG, TEMP
000106 0E??               M         movlw   high BACKUP_TBLPTRU
000108 6EDA               M         movwf   FSR2H
00010A 0E??               M         movlw   low BACKUP_TBLPTRU
00010C 6ED9               M         movwf   FSR2L
00010E C??? FFE8          M         movff   TEMP, WREG
000112 CFF8 FFDB      00216         movff   TBLPTRU, PLUSW2
                      00217  ENDIF
                      00218 
                      00219  IFDEF  SAVE_TBLPTRH
                      00220         ldfsr2  2, BACKUP_TBLPTRH       ; Save TBLPTRH
000116 CFE8 F???          M         movff   WREG, TEMP
00011A 0E??               M         movlw   high BACKUP_TBLPTRH
00011C 6EDA               M         movwf   FSR2H
00011E 0E??               M         movlw   low BACKUP_TBLPTRH
000120 6ED9               M         movwf   FSR2L
000122 C??? FFE8          M         movff   TEMP, WREG
000126 CFF7 FFDB      00221         movff   TBLPTRH, PLUSW2
                      00222  ENDIF
                      00223 
                      00224  IFDEF  SAVE_TBLPTRL
                      00225         ldfsr2  2, BACKUP_TBLPTRL       ; Save TBLPTRL
00012A CFE8 F???          M         movff   WREG, TEMP
00012E 0E??               M         movlw   high BACKUP_TBLPTRL
000130 6EDA               M         movwf   FSR2H
000132 0E??               M         movlw   low BACKUP_TBLPTRL
000134 6ED9               M         movwf   FSR2L
000136 C??? FFE8          M         movff   TEMP, WREG
00013A CFF6 FFDB      00226         movff   TBLPTRL, PLUSW2
                      00227  ENDIF
                      00228 
                      00229  IFDEF  SAVE_TABLAT
                      00230         ldfsr2  2, BACKUP_TABLAT        ; Save TABLAT
00013E CFE8 F???          M         movff   WREG, TEMP
000142 0E??               M         movlw   high BACKUP_TABLAT
000144 6EDA               M         movwf   FSR2H
000146 0E??               M         movlw   low BACKUP_TABLAT
000148 6ED9               M         movwf   FSR2L
00014A C??? FFE8          M         movff   TEMP, WREG
00014E CFF5 FFDB      00231         movff   TABLAT, PLUSW2
                      00232  ENDIF
                      00233 ; *********************************************************
                      00234 
                      00235 ; *** Incriment the Task Pointer **************************
000152                00236 IncrimentTaskPointer
000152 2A00           00237         incf    TASK_POINTER, F, A      ; Incriment the task pointer
                      00238 ; *********************************************************
                      00239 
                      00240 ; *** Reset Interrupt Flag ********************************
000154 94F2           00241         bcf     INTCON, TMR0IF, A       ; Clear interrupt
                      00242 ; *********************************************************
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00243 
                      00244 ; *** Test the Task Pointer *******************************
000156 5000           00245         movf    TASK_COUNTER, W, A
000158 6000           00246         cpfslt  TASK_POINTER, A         ; Is the pointer lt the counter?                
00015A 6A00           00247         clrf    TASK_POINTER, A         ; No, reset the pointer
                      00248 ; *********************************************************
                      00249 
                      00250 ; *** Find the task ***************************************
00015C 6AF4           00251         clrf    WREG2, A
                      00252         ldfsr2  2, TASK_INFO_TABLE      ; Set up pointer to priority table
00015E CFE8 F???          M         movff   WREG, TEMP
000162 0E??               M         movlw   high TASK_INFO_TABLE
000164 6EDA               M         movwf   FSR2H
000166 0E??               M         movlw   low TASK_INFO_TABLE
000168 6ED9               M         movwf   FSR2L
00016A C??? FFE8          M         movff   TEMP, WREG
                      00253 
00016E 0E03           00254 TstTsk  movlw   0x03                    
000170 14DE           00255         andwf   POSTINC2, W, A          ; Mask off upper 6 bits, get task no#
000172 6200           00256         cpfseq  TASK_POINTER, A         ; Does the task numbers match?
000174 D???           00257         bra     NxtTsk                  ; No
                      00258 
000176 CFF4 F???      00259         movff   WREG2, TABLE_POINTER    ; Yes, store pointer
                      00260 
00017A 2AF4           00261 NxtTsk  incf    WREG2, F, A             ; Check the next task
00017C 0E04           00262         movlw   0x04
00017E 62F4           00263         cpfseq  WREG2, A                ; Is the last possible task checked?
000180 D???           00264         bra     TstTsk  
                      00265 
000182 5000           00266         movf    TABLE_POINTER, W, A
                      00267 ; *********************************************************
                      00268 
                      00269 ; *** Set the Priority ************************************
000184                00270 SetPriorityTimer
                      00271         ldfsr2  2, TASK_INFO_TABLE      ; Set up pointer to priority table
000184 CFE8 F???          M         movff   WREG, TEMP
000188 0E??               M         movlw   high TASK_INFO_TABLE
00018A 6EDA               M         movwf   FSR2H
00018C 0E??               M         movlw   low TASK_INFO_TABLE
00018E 6ED9               M         movwf   FSR2L
000190 C??? FFE8          M         movff   TEMP, WREG
                      00272 
000194 50DB           00273         movf    PLUSW2, W, A
000196 0BFC           00274         andlw   0xFC                    ; Pull out priority bits
                      00275 
000198 E0??           00276         bz      IncrimentTaskPointer    ; Goto next task if no priority
                      00277 
00019A 1CE8           00278         comf    WREG, W, A              ; Invert and set TMR0
00019C 90E8           00279         bcf     WREG, 0, A
00019E 92E8           00280         bcf     WREG, 1, A
                      00281 
0001A0 6ED6           00282         movwf   TMR0L, A        
                      00283 ; *********************************************************
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00284 
                      00285 ; *** Restore the Saved data ******************************
0001A2                00286 RecallSavedData
  0000                00287         GLOBAL  RecallSavedData
                      00288 
0001A2 5000           00289         movf    TABLE_POINTER, W, A     
                      00290 
                      00291         ldfsr2  2, TASK_TABLE           ; Restore pointer to TOS
0001A4 CFE8 F???          M         movff   WREG, TEMP
0001A8 0E??               M         movlw   high TASK_TABLE
0001AA 6EDA               M         movwf   FSR2H
0001AC 0E??               M         movlw   low TASK_TABLE
0001AE 6ED9               M         movwf   FSR2L
0001B0 C??? FFE8          M         movff   TEMP, WREG
0001B4 CFDB FFFC      00292         movff   PLUSW2, STKPTR          
                      00293         ldfsr2  2, BACKUP_WREG          ; Restore WREG
0001B8 CFE8 F???          M         movff   WREG, TEMP
0001BC 0E??               M         movlw   high BACKUP_WREG
0001BE 6EDA               M         movwf   FSR2H
0001C0 0E??               M         movlw   low BACKUP_WREG
0001C2 6ED9               M         movwf   FSR2L
0001C4 C??? FFE8          M         movff   TEMP, WREG
0001C8 CFDB F???      00294         movff   PLUSW2, ALT_W0
                      00295         ldfsr2  2, BACKUP_STATUS        ; Restore STATUS        
0001CC CFE8 F???          M         movff   WREG, TEMP
0001D0 0E??               M         movlw   high BACKUP_STATUS
0001D2 6EDA               M         movwf   FSR2H
0001D4 0E??               M         movlw   low BACKUP_STATUS
0001D6 6ED9               M         movwf   FSR2L
0001D8 C??? FFE8          M         movff   TEMP, WREG
0001DC CFDB FFD8      00296         movff   PLUSW2, STATUS
                      00297 
                      00298  IFDEF  SAVE_BSR
                      00299         ldfsr2  2, BACKUP_BSR           ; Restore BSR
0001E0 CFE8 F???          M         movff   WREG, TEMP
0001E4 0E??               M         movlw   high BACKUP_BSR
0001E6 6EDA               M         movwf   FSR2H
0001E8 0E??               M         movlw   low BACKUP_BSR
0001EA 6ED9               M         movwf   FSR2L
0001EC C??? FFE8          M         movff   TEMP, WREG
0001F0 CFDB FFE0      00300         movff   PLUSW2, BSR
                      00301  ENDIF
                      00302 
                      00303  IFDEF  SAVE_FSR0H
                      00304         ldfsr2  2, BACKUP_FSR0H         ; Restore FSR0H
0001F4 CFE8 F???          M         movff   WREG, TEMP
0001F8 0E??               M         movlw   high BACKUP_FSR0H
0001FA 6EDA               M         movwf   FSR2H
0001FC 0E??               M         movlw   low BACKUP_FSR0H
0001FE 6ED9               M         movwf   FSR2L
000200 C??? FFE8          M         movff   TEMP, WREG
000204 CFDB FFEA      00305         movff   PLUSW2, FSR0H
                      00306  ENDIF
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00307 
                      00308  IFDEF  SAVE_FSR0L
                      00309         ldfsr2  2, BACKUP_FSR0L         ; Restore FSR0L
000208 CFE8 F???          M         movff   WREG, TEMP
00020C 0E??               M         movlw   high BACKUP_FSR0L
00020E 6EDA               M         movwf   FSR2H
000210 0E??               M         movlw   low BACKUP_FSR0L
000212 6ED9               M         movwf   FSR2L
000214 C??? FFE8          M         movff   TEMP, WREG
000218 CFDB FFE9      00310         movff   PLUSW2, FSR0L
                      00311  ENDIF
                      00312 
                      00313  IFDEF  SAVE_FSR1H
                      00314         ldfsr2  2, BACKUP_FSR1H         ; Restore FSR1H
00021C CFE8 F???          M         movff   WREG, TEMP
000220 0E??               M         movlw   high BACKUP_FSR1H
000222 6EDA               M         movwf   FSR2H
000224 0E??               M         movlw   low BACKUP_FSR1H
000226 6ED9               M         movwf   FSR2L
000228 C??? FFE8          M         movff   TEMP, WREG
00022C CFDB FFE2      00315         movff   PLUSW2, FSR1H
                      00316  ENDIF
                      00317 
                      00318  IFDEF  SAVE_FSR1L
                      00319         ldfsr2  2, BACKUP_FSR1L         ; Restore FSR1L
000230 CFE8 F???          M         movff   WREG, TEMP
000234 0E??               M         movlw   high BACKUP_FSR1L
000236 6EDA               M         movwf   FSR2H
000238 0E??               M         movlw   low BACKUP_FSR1L
00023A 6ED9               M         movwf   FSR2L
00023C C??? FFE8          M         movff   TEMP, WREG
000240 CFDB FFE1      00320         movff   PLUSW2, FSR1L
                      00321  ENDIF
                      00322 
                      00323  IFDEF  SAVE_FSR2H
                      00324         ldfsr2  2, BACKUP_FSR2H         ; Restore FSR2H
000244 CFE8 F???          M         movff   WREG, TEMP
000248 0E??               M         movlw   high BACKUP_FSR2H
00024A 6EDA               M         movwf   FSR2H
00024C 0E??               M         movlw   low BACKUP_FSR2H
00024E 6ED9               M         movwf   FSR2L
000250 C??? FFE8          M         movff   TEMP, WREG
000254 CFDB F???      00325         movff   PLUSW2, ALT_FSR2H
                      00326  ENDIF
                      00327 
                      00328  IFDEF  SAVE_FSR2L
                      00329         ldfsr2  2, BACKUP_FSR2L         ; Restore FSR2L
000258 CFE8 F???          M         movff   WREG, TEMP
00025C 0E??               M         movlw   high BACKUP_FSR2L
00025E 6EDA               M         movwf   FSR2H
000260 0E??               M         movlw   low BACKUP_FSR2L
000262 6ED9               M         movwf   FSR2L
000264 C??? FFE8          M         movff   TEMP, WREG
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000268 CFDB F???      00330         movff   PLUSW2, ALT_FSR2L
                      00331  ENDIF
                      00332 
                      00333  IFDEF  SAVE_PRODH
                      00334         ldfsr2  2, BACKUP_PRODH         ; Restore PRODH
00026C CFE8 F???          M         movff   WREG, TEMP
000270 0E??               M         movlw   high BACKUP_PRODH
000272 6EDA               M         movwf   FSR2H
000274 0E??               M         movlw   low BACKUP_PRODH
000276 6ED9               M         movwf   FSR2L
000278 C??? FFE8          M         movff   TEMP, WREG
00027C CFDB FFF4      00335         movff   PLUSW2, PRODH
                      00336  ENDIF
                      00337 
                      00338  IFDEF  SAVE_PRODL
                      00339         ldfsr2  2, BACKUP_PRODL         ; Restore PRODL
000280 CFE8 F???          M         movff   WREG, TEMP
000284 0E??               M         movlw   high BACKUP_PRODL
000286 6EDA               M         movwf   FSR2H
000288 0E??               M         movlw   low BACKUP_PRODL
00028A 6ED9               M         movwf   FSR2L
00028C C??? FFE8          M         movff   TEMP, WREG
000290 CFDB FFF3      00340         movff   PLUSW2, PRODL
                      00341  ENDIF
                      00342 
                      00343  IFDEF  SAVE_TBLPTRU
                      00344         ldfsr2  2, BACKUP_TBLPTRU       ; Restore TBLPTRU
000294 CFE8 F???          M         movff   WREG, TEMP
000298 0E??               M         movlw   high BACKUP_TBLPTRU
00029A 6EDA               M         movwf   FSR2H
00029C 0E??               M         movlw   low BACKUP_TBLPTRU
00029E 6ED9               M         movwf   FSR2L
0002A0 C??? FFE8          M         movff   TEMP, WREG
0002A4 CFDB FFF8      00345         movff   PLUSW2, TBLPTRU
                      00346  ENDIF
                      00347 
                      00348  IFDEF  SAVE_TBLPTRH
                      00349         ldfsr2  2, BACKUP_TBLPTRH       ; Restore TBLPTRH
0002A8 CFE8 F???          M         movff   WREG, TEMP
0002AC 0E??               M         movlw   high BACKUP_TBLPTRH
0002AE 6EDA               M         movwf   FSR2H
0002B0 0E??               M         movlw   low BACKUP_TBLPTRH
0002B2 6ED9               M         movwf   FSR2L
0002B4 C??? FFE8          M         movff   TEMP, WREG
0002B8 CFDB FFF7      00350         movff   PLUSW2, TBLPTRH
                      00351  ENDIF
                      00352 
                      00353  IFDEF  SAVE_TBLPTRL
                      00354         ldfsr2  2, BACKUP_TBLPTRL       ; Restore TBLPTRL
0002BC CFE8 F???          M         movff   WREG, TEMP
0002C0 0E??               M         movlw   high BACKUP_TBLPTRL
0002C2 6EDA               M         movwf   FSR2H
0002C4 0E??               M         movlw   low BACKUP_TBLPTRL
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002C6 6ED9               M         movwf   FSR2L
0002C8 C??? FFE8          M         movff   TEMP, WREG
0002CC CFDB FFF6      00355         movff   PLUSW2, TBLPTRL
                      00356  ENDIF
                      00357 
                      00358  IFDEF  SAVE_TABLAT
                      00359         ldfsr2  2, BACKUP_TABLAT        ; Restore TABLAT
0002D0 CFE8 F???          M         movff   WREG, TEMP
0002D4 0E??               M         movlw   high BACKUP_TABLAT
0002D6 6EDA               M         movwf   FSR2H
0002D8 0E??               M         movlw   low BACKUP_TABLAT
0002DA 6ED9               M         movwf   FSR2L
0002DC C??? FFE8          M         movff   TEMP, WREG
0002E0 CFDB FFF5      00360         movff   PLUSW2, TABLAT
                      00361  ENDIF
                      00362 
                      00363  IFDEF  SAVE_FSR2H      
0002E4 C??? FFDA      00364         movff   ALT_FSR2H, FSR2H
                      00365  ENDIF
                      00366 
                      00367  IFDEF  SAVE_FSR2L
0002E8 C??? FFD9      00368         movff   ALT_FSR2L, FSR2L
                      00369  ENDIF
                      00370 
0002EC C??? FFE8      00371         movff   ALT_W0, WREG
                      00372 ; *********************************************************
                      00373 
                      00374 ; *** Start the Timer *************************************
0002F0 8ED5           00375         bsf     T0CON, TMR0ON, A        ; Start the timer
                      00376 ; *********************************************************
                      00377 
0002F2 0010           00378         retfie  0
                      00379 ; *******************************************************************
                      00380 
                      00381         END
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 19


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRESH                            00000FC4
ADRESL                            00000FC3
ALT_FSR2H                         00000000
ALT_FSR2L                         00000000
ALT_STATUS                        00000000
ALT_W0                            00000000
AN0                               00000000
AN1                               00000001
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN5                               00000000
AN6                               00000001
AN7                               00000002
B                                 00000001
BACKUP_BSR                        00000000
BACKUP_FSR0H                      00000000
BACKUP_FSR0L                      00000000
BACKUP_FSR1H                      00000000
BACKUP_FSR1L                      00000000
BACKUP_FSR2H                      00000000
BACKUP_FSR2L                      00000000
BACKUP_PRODH                      00000000
BACKUP_PRODL                      00000000
BACKUP_STATUS                     00000000
BACKUP_TABLAT                     00000000
BACKUP_TBLPTRH                    00000000
BACKUP_TBLPTRL                    00000000
BACKUP_TBLPTRU                    00000000
BACKUP_WREG                       00000000
BANKED                            00000001
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BOR                               00000000
BRGH                              00000002
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

BSR                               00000FE0
C                                 00000000
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2                              00000001
CCP2A                             00000003
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CK                                00000006
CKE                               00000006
CKP                               00000004
CLKO                              00000006
CLRW                              CLRF WREG
CREN                              00000004
CS                                00000002
CSRC                              00000007
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DONE                              00000002
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

D_A                               00000005
F                                 00000001
FAST                              00000001
FERR                              00000002
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GO                                00000002
GO_DONE                           00000002
I2C_DAT                           00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT2                              00000002
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INTCON                            00000FF2
INTCON1                           00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRVST                             00000005
IncrimentTaskPointer              00000152
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

LATA                              00000F89
LATB                              00000F8A
LATC                              00000F8B
LATD                              00000F8C
LATE                              00000F8D
LCALL                             CALL
LFSR_BUG                          
LGOTO                             GOTO
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LWRT                              00000006
MOVFP                             MOVFF
MOVPF                             MOVFF
N                                 00000004
NEGW                              NEGF WREG
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_RI                            00000004
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
NxtTsk                            0000017A
OBF                               00000006
OERR                              00000001
OSC2                              00000006
OSCCON                            00000FD3
OV                                00000003
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

PEIE                              00000006
PEN                               00000002
PIE1                              00000F9D
PIE2                              00000FA0
PIR1                              00000F9E
PIR2                              00000FA1
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PROC_INCLUDE                      P18C452.INC
PRODH                             00000FF4
PRODL                             00000FF3
PSA                               00000003
PSP0                              00000000
PSP1                              00000001
PSP2                              00000002
PSP3                              00000003
PSP4                              00000004
PSP5                              00000005
PSP6                              00000006
PSP7                              00000007
PSPIE                             00000007
PSPIF                             00000007
PSPIP                             00000007
PSPMODE                           00000004
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RI                                00000004
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
R_W                               00000002
RecallSavedData                   000001A2
S                                 00000003
SAVE_BSR                          
SAVE_FSR0H                        
SAVE_FSR0L                        
SAVE_FSR1H                        
SAVE_FSR1L                        
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

SAVE_FSR2H                        
SAVE_FSR2L                        
SAVE_PRODH                        
SAVE_PRODL                        
SAVE_TABLAT                       
SAVE_TBLPTRH                      
SAVE_TBLPTRL                      
SAVE_TBLPTRU                      
SCK                               00000003
SCL                               00000003
SCS                               00000000
SDA                               00000004
SDI                               00000004
SDO                               00000005
SEN                               00000000
SETUP_NAME                        Setup
SMP                               00000007
SPBRG                             00000FAF
SPEN                              00000007
SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
STATUS                            00000FD8
STKFUL                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
SWDTEN                            00000000
SYNC                              00000004
SetPriorityTimer                  00000184
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0IP                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0SE                              00000004
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1INSYNC                          00000002
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3INSYNC                          00000002
T3SYNC                            00000002
TABLAT                            00000FF5
TABLE_POINTER                     00000000
TASK1                             0x01
TASK1_NAME                        Task1
TASK1_TIME                        0x3F
TASK2                             0x08
TASK2_NAME                        Task2
TASK2_TIME                        0x02
TASK3                             0x10
TASK3_TIME                        0x00
TASK4                             0x18
TASK4_TIME                        0x00
TASK_BUFFER                       00000000
TASK_COMMAND                      00000000
TASK_COUNTER                      00000000
TASK_INFO_TABLE                   00000000
TASK_POINTER                      00000000
TASK_TABLE                        00000000
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TEMP                              00000000
TIMER_PRESCALE                    0x04
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

TMR1L                             00000FCE
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3ON                            00000000
TO                                00000003
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISB                             00000F93
TRISC                             00000F94
TRISD                             00000F95
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX                                00000006
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
TaskManager                       00000000
TstTsk                            0000016E
UA                                00000001
VREFM                             00000002
VREFP                             00000003
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WR                                00000001
WREG                              00000FE8
WREG2                             00000FF4
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

WREG3                             00000FF3
Z                                 00000002
_BORV_25_2                        000000FF
_BORV_27_2                        000000FB
_BORV_42_2                        000000F7
_BORV_45_2                        000000F3
_BOR_OFF_2                        000000FD
_BOR_ON_2                         000000FF
_CCP2MX_OFF_5                     000000FE
_CCP2MX_ON_5                      000000FF
_CONFIG0                          00300000
_CONFIG1                          00300001
_CONFIG2                          00300002
_CONFIG3                          00300003
_CONFIG4                          00300004
_CONFIG5                          00300005
_CONFIG6                          00300006
_CONFIG7                          00300007
_CP_OFF_0                         000000FF
_CP_ON_0                          00000000
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_ECIO_OSC_1                       000000FD
_EC_OSC_1                         000000FC
_HSPLL_OSC_1                      000000FE
_HS_OSC_1                         000000FA
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_LP_OSC_1                         000000F8
_OSCS_OFF_1                       000000FF
_OSCS_ON_1                        000000DF
_PWRT_OFF_2                       000000FF
_PWRT_ON_2                        000000FE
_RCIO_OSC_1                       000000FF
_RC_OSC_1                         000000FB
_STVR_OFF_6                       000000FE
_STVR_ON_6                        000000FF
_WDTPS_128_3                      000000FF
_WDTPS_16_3                       000000F9
_WDTPS_1_3                        000000F1
_WDTPS_2_3                        000000F3
_WDTPS_32_3                       000000FB
_WDTPS_4_3                        000000F5
_WDTPS_64_3                       000000FD
_WDTPS_8_3                        000000F7
_WDT_OFF_3                        000000FE
_WDT_ON_3                         000000FF
MPASM 03.00 Released               TM.ASM   1-21-2002  10:01:42         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

_XT_OSC_1                         000000F9
__18C452                          00000001
addff                             
addfl                             
andff                             
andfl                             
brclr                             
brset                             
cffbeq                            
cffbgt                            
cffblt                            
cffbne                            
cflbeq                            
cflbgt                            
cflblt                            
cflbne                            
clrw                              clrf WREG
iorff                             
iorfl                             
lcall                             call
ldfsr2                            
lgoto                             goto
movfp                             movff
movlf                             
movpf                             movff
negw                              negf WREG
xorff                             
xorfl                             

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

